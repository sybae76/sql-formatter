Query 포맷

지금부터 몇 번에 걸쳐 내가 사용하는 쿼리를 보여줄꺼야

쿼리를 분석해서 이후 포맷팅을 요청하면 동일한 형태로 만들어줘

중점해서 확인 할 부분은 띄어쓰기를 tab 문자(\t)로 각 Block별로 구분한거야
그리고 Reserved keyword를 배치한 방식을 꼼꼼히 분석해줘
SELECT 및 INSERT 등의 문법 중 Column 을 배치하는 방식은
',' 문자를 앞에 두고 tab 문자를 1회 입력한 뒤에 Table-alias.Column-name 형식으로 입력하고
동일한 이름이라고 하더라도 컬럼 alias를 지정해줘
각 컬럼의 길이가 달라서 AS 위치가 달라질 수 있는데 이걸 맞춰서 정렬해줘
AS 앞에는 tab 문자가 1개 이상 들어가고 뒤에는 tab 문자를 1개만 넣어서 만들면돼

CASE 구문을 포맷팅 할 때, CASE와 END가 블럭의 시작/종료가 되도록 하고 내용은 tab 문자 1개를 추가해서 indent 처리
WHEN과 THEN의 내용이 120자 이내라면 한 줄로 표현하고
THEN 내용이 너무 길어서 한 줄로 표현하기 어렵다면 WHEN 블럭에 THEN이 들어가는 것 처럼 THEN 앞에 tab 문자 1개를 추가해서 block으로 작성해줘

WHERE 절과 ON 절은 1=1 이라는 항상 참인 조건으로 만들어지도록 해주고
실제 로직은 다음 줄부터 AND 나 OR 절로 구성해줘

조건은 Operator(=, <>, >, <) 등 기호인 경우
Left-value와 Operator 사이에는 1개 이상의 tab 문자를 넣어서 Operator가 수직으로 정렬되도록 해주고
Right-value 뒤에는 tab 문자 1개만 추가해줘

조건이 IN, IS NULL 등 문자인 경우는 Right-value 앞에 공백 1개만 넣어서 구성해줘

ORDER BY, GROUP BY 등 컬럼 목록이 필요한 경우 SELECT와 동일하게 ',' 문자가 앞에 나오도록 포맷해줘

함수나 프로시저를 호출하기 위해 Parameter를 전달하는 경우
각 인자를 ',' 문자로 구분하고 ',' 뒤에는 공백 1개를 넣어서 식별하기 편하도록 해줘


나머지는 실제 정렬해 둔 예제 Query를 분석해줘

최종적으로는 Copilot 의 에이전트를 만들 때 지시 사항을 최대한 자세히 작성하는게 목표야.

만들어 달라고하면 작성해주면 돼

지금부터 Query를 보여줄께.
