
SELECT
	T1.PDP_PROD_CD			AS		PDP_CD
,	T1.PLAN_DT				AS		PLAN_YYMMDD
,	T3.YYMM
,	T2.L1_CD
,	T2.L1_NM
,	T2.L2_CD
,	T2.L2_NM
,	T2.L3_CD
,	T2.L3_NM
,	T2.PDP_NM
,	ISNULL(T2.LP_CD,'')		AS		LP_CD
,	ISNULL(T2.LP_NM,'')		AS		LP_NM
,	CASE
		WHEN ISNULL(T2.OUT_PRI_UOM_CD,'') <> '' AND ISNULL(T2.PRI_UOM_CD,'') <> ISNULL(T2.OUT_PRI_UOM_CD,'')
		THEN
			CASE
				WHEN ISNULL(T2.PRI_UOM_CD,'') = 'USD_BBL' AND ISNULL(T2.OUT_PRI_UOM_CD,'') = 'USD_MTON'
					THEN PRDC_PRC_AMT * (1/(0.158984 * ISNULL(T2.DENSITY,1)))
				WHEN ISNULL(T2.PRI_UOM_CD,'') = 'USD_MTON' AND ISNULL(T2.OUT_PRI_UOM_CD,'') = 'USD_BBL'
					THEN PRDC_PRC_AMT / (1/(0.158984 * ISNULL(T2.DENSITY,1)))
				WHEN ISNULL(T2.PRI_UOM_CD,'') = 'KRW_KWH' AND ISNULL(T2.OUT_PRI_UOM_CD,'') = 'USD_KWH'
					THEN PRDC_PRC_AMT / CASE WHEN ISNULL(T5.REF_PRC_AMT,0) = 0 THEN 1 ELSE T5.REF_PRC_AMT END
				WHEN ISNULL(T2.PRI_UOM_CD,'') = 'KRW_NM3' AND ISNULL(T2.OUT_PRI_UOM_CD,'') = 'USD_NM3_24H'
					THEN PRDC_PRC_AMT / (CASE WHEN ISNULL(T5.REF_PRC_AMT,0) = 0 THEN 1 ELSE T5.REF_PRC_AMT END) * 24
				WHEN ISNULL(T2.PRI_UOM_CD,'') = 'KRW_TON' AND ISNULL(T2.OUT_PRI_UOM_CD,'') = 'USD_BBL'
					THEN PRDC_PRC_AMT / (1/(0.158984 * ISNULL(T2.DENSITY,1))) / CASE WHEN ISNULL(T5.REF_PRC_AMT,0) = 0 THEN 1 ELSE T5.REF_PRC_AMT END
				WHEN ISNULL(T2.PRI_UOM_CD,'') = 'KRW_TON' AND ISNULL(T2.OUT_PRI_UOM_CD,'') = 'USD_TON'
					THEN PRDC_PRC_AMT / CASE WHEN ISNULL(T5.REF_PRC_AMT,0) = 0 THEN 1 ELSE T5.REF_PRC_AMT END
				WHEN ISNULL(T2.PRI_UOM_CD,'') = 'KRW_TON' AND ISNULL(T2.OUT_PRI_UOM_CD,'') = 'USD_MTON'
					THEN PRDC_PRC_AMT / CASE WHEN ISNULL(T5.REF_PRC_AMT,0) = 0 THEN 1 ELSE T5.REF_PRC_AMT END
				ELSE PRDC_PRC_AMT
			END
		ELSE PRDC_PRC AMT
	END						AS		PRD_PRI
,	T4.SORT_SEQ				AS		CM_DTL_ORD
,	T2.OUT_PRI_UOM_NM		AS		UOM_NM
,	T2.L1_SEQ
,	T2.PDP_SEQ
FROM
	TB_PP_PDP_PROD_PRC_D T1
,	VW_PP_PDP_PROD_M T2
,	TB_PP_PDP_CALND_M T3
,	TB_CM_PDP_CMN_CD_D T4
,	TB_PP_PDP_VER_REF_PRC_D T5
WHERE 1=1
AND	T1.PDP_PROD_CD		=		T2.PDP_CD
AND	T1.PDP_VER_CD		=		:VER_CD
AND	T1.PLAN_DT			=		T3.DT
AND	T2.L1_CD			=		T4.CMN_CD
AND	T4.CMN_CD_GRP_ID	=		'L1_CD'
AND	T2.PRI_MOD_CD		IN		('LP','ALL')
AND	T1.PDP_VER_CD		=		T5.PDP_VER_CD
AND	T1.PLAN_DT			=		T5.PLAN_DT
AND	T5.PDPCOL_CD		=		'EXCHANGE_RATE'


SELECT
	*
FROM
	T3SMARTSCM.DBO.APS_MD_MP_RESOURCE_PLAN A WITH (NOLOCK)
WHERE 1=1
AND	A.VER_ID		=	'MP-PK-20230911-001'
AND	A.ITEM_ID		=	'6370357L'
ORDER BY
	A.ITEM_ID
,	A.START_DATE

SELECT DISTINCT
	B.PLANT_ID
,	B.ITEM_ID
,	C.MCD
,	C.FLUX
,	C.CIE
,	C.VF
FROM
	APS_MD_MP_RESULT_STOCK_STATUS A WITH(NOLOCK)
INNER JOIN #TB_ITEM B
	ON 1=1
	AND	B.INVENTORY_ID	=	A.INVENTORY_ID
LEFT OUTER JOIN TB_MT_PROD_VER_OCCUPY C WITH(NOLOCK)
	ON 1=1
	AND	C.ITEM_ID	=	B.ITEM_ID
	AND C.PLANT_ID	=	B.PLANT_ID
	AND C.BIN_NAME	=	B.BIN_CODE
WHERE 1=1
AND	A.VER_ID		=	'MP-PK-20230911-001'
AND	A.INPUT_QTY		>	0						--스펙 별 재고 생산이 발생하여 창고에 투입 수량이 있는 경우만 확인
AND	A.INVENTORY_ID	LIKE '%^%'					--BIN CODE를 가지고 있는 INVENTORY만 확인
AND	B.ITEM_ID		LIKE '[67]%'				--완제품과 반제품만 확인
ORDER BY
	B.ITEM_ID DESC
	
SELECT
	A.ITEM_ID													AS	INVENTORY_ID
,	SUBSTRING(A.ITEM_ID, 1, CHARINDEX('_', A.ITEM_ID) - 1)		AS	ITEM_ID
,	SUBSTRING(A.ITEM_ID, CHARINDEX('_', A.ITEM_ID) + 1, CASE WHEN A.ITEM_GRP_ID NOT LIKE '%SPEC%' THEN 99 ELSE CASE WHEN A.ITEM_GRP_ID LIKE '%MAIN_SPEC%' THEN CHARINDEX('&', A.ITEM_ID) ELSE CHARINDEX('^', A.ITEM_ID) END - CHARINDEX('_', A.ITEM_ID) - 1 END)	AS	PLANT_ID
,	CASE WHEN A.ITEM_GRP_ID LIKE '%MAIN_SPEC%' THEN SUBSTRING(A.ITEM_ID, CHARINDEX('&', A.ITEM_ID) + 1, 99) ELSE NULL END	AS	USAGE_KEY
,	CASE WHEN A.ITEM_GRP_ID LIKE 'SPEC%' THEN SUBSTRING(A.ITEM_ID, CHARINDEX('^', A.ITEM_ID) + 1, 99) ELSE NULL END	AS	BIN_CODE
,	A.ITEM_GRP_ID												AS	A.ITEM_GRP_ID
INTO #TB_ITEM
FROM
	APS_MD_MD_ITEM A WITH(NOLOCK)
WHERE 1=1
AND	A.VER_ID		=	'MP-PK-20230911-001'

SELECT DISTINCT
,	B.ITEM_ID
,	C.MCD
,	C.FLUX
,	C.CIE
,	C.VF
FROM
	APS_MD_MP_RESULT_STOCK_STATUS A WITH(NOLOCK)
INNER JOIN #TB_ITEM B
	ON 1=1
	AND	B.INVENTORY_ID	=	A.INVENTORY_ID
LEFT OUTER JOIN TB_MT_PROD_VER_OCCUPY C WITH(NOLOCK)
	ON 1=1
	AND	C.ITEM_ID	=	B.ITEM_ID
	AND C.PLANT_ID	=	B.PLANT_ID
	AND C.BIN_NAME	=	B.BIN_CODE
WHERE 1=1
AND	A.VER_ID		=	'MP-PK-20230911-001'
AND	A.INPUT_QTY		>	0				--스펙 별 재고 생산이 발생하여 창고에 투입 수량이 있는 경우만 확인
AND	A.INVENTORY_ID	LIKE '%^%'			--BIN CODE를 가지고 있는 INVENTORY만 확인
AND	B.ITEM_ID LIKE '[67]%'				--완제품과 반제품만 확인
ORDER BY
	B.ITEM_ID DESC


--PKG 완제품, 수주 대응
SELECT
	A.VER_ID
,	A.INVENTORY_ID
,	CAST(A.START_DATE AS DATE)	AS	PSI_DATE
,	A.INIT_QTY
,	A.INPUT_QTY
,	A.OUTPUT_QTY
,	A.STOCK_QTY
FROM
	T3SMARTSCM.DBO.APS_MD_MP_RESULT_STOCK_STATUS A WITH (NOLOCK)
WHERE 1=1
AND	A.VER_ID		=	'MP-PK-20230911-001'
AND	(
		A.OUTPUT_QTY	>	0
	OR	A.INPUT_QTY		>	0
	OR	A.STOCK_QTY		>	0
	)
AND	A.ITEM_ID		LIKE '7%'

WITH
	CTE_PSI_RAW AS (
		SELECT
			A.VER_ID
		,	A.PSI_DATE
		,	A.INIT_QTY
		,	A.INPUT_QTY
		,	A.OUTPUT_QTY
		,	A.STOCK_QTY
		,	A.ITEM_ID
		,	A.PLANT_ID
		,	A.USAGE_KEY
		,	A.INVENTORY_ID
		FROM
			(
			
				SELECT
					A.VER_ID
				,	A.INVENTORY_ID
				,	A.PSI_DATE
				,	A.INIT_QTY
				,	A.INPUT_QTY
				,	A.OUTPUT_QTY
				,	A.STOCK_QTY
				,	A.ITEM_ID
				,	SUBSTRING(A.PAYLOAD, 1, CHARINDEX('&', A.PAYLOAD) - 1)	AS	PLANT_ID
				,	SUBSTRING(A.PAYLOAD, CHARINDEX('&', A.PAYLOAD) + 1, LEN(A.PAYLOAD))		AS	USAGE_KEY
				FROM
					(
						--PKG 완제품, 수주 대응
						SELECT
							A.VER_ID
						,	A.INVENTORY_ID
						,	CAST(A.START_DATE AS DATE)	AS	PSI_DATE
						,	A.INIT_QTY
						,	A.INPUT_QTY
						,	A.OUTPUT_QTY
						,	A.STOCK_QTY
						,	SUBSTRING(A.INVENTORY_ID, 1, CHARINDEX('_', A.INVENTORY_ID) - 1)	AS	ITEM_ID
						,	SUBSTRING(A.INVENTORY_ID, CHARINDEX('_', A.INVENTORY_ID) + 1, LEN(A.INVENTORY_ID))		AS	PAYLOAD
						FROM
							T3SMARTSCM.DBO.APS_MD_MP_RESULT_STOCK_STATUS A WITH (NOLOCK)
						WHERE 1=1
						AND	A.VER_ID		=	:psVER_ID
						AND	A.INVENTORY_ID	LIKE '%&%'						--수주에 대응되는 SPEC, 용도키 포함
						AND	A.ITEM_ID		LIKE '7%'
					) A
				WHERE 1=1
				
			) A
		WHERE 1=1
	)
,	CTE_PSI_SPEC AS (
		SELECT
			A.VER_ID
		,	A.PSI_DATE
		,	A.INIT_QTY
		,	A.INPUT_QTY
		,	A.OUTPUT_QTY
		,	A.STOCK_QTY
		,	A.ITEM_ID
		,	A.PLANT_ID
		,	A.USAGE_KEY
		,	ISNULL(B.INTENSITY, '')		AS	INTENSITY
		,	ISNULL(B.FLUX, '')			AS	FLUX
		,	ISNULL(B.CIE, '')			AS	CIE
		,	ISNULL(B.VF, '')			AS	VF
		,	A.INVENTORY_ID
		FROM
			CTE_PSI_RAW A
		LEFT OUTER JOIN T3SMARTSCM.DBO.TB_MT_SPEC_USAGE B WITH (NOLOCK)
			ON 1=1
			AND	B.PLANT_ID		=	A.PLANT_ID
			AND	B.ITEM_ID		=	A.ITEM_ID
			AND	B.USAGE			=	A.USAGE_KEY
			AND	B.USAGE_TYPE	=	'P'
		WHERE 1=1
	)
,	CTE_PSI_ROWS AS (
		SELECT
			A.VER_ID
		,	A.PLANT_ID
		,	A.ITEM_ID
		,	T3SMARTSCM.DBO.FN_GET_SPEC_ID_1(A.ITEM_ID, A.INTENSITY, A.FLUX, A.CIE, A.VF)	AS	SPEC_ID
		,	A.PSI_DATE
		,	B.PSI_GUBUN
		,	B.PSI_QTY
		,	GETDATE()					AS	CREATE_DTTM
		,	'SP'						AS	CREATE_USER
		,	A.INVENTORY_ID
		FROM
			CTE_PSI_SPEC A
		CROSS APPLY (VALUES
				('P', INPUT_QTY)
			,	('S', OUTPUT_QTY)
			,	('I', STOCK_QTY)
			) B(PSI_GUBUN, PSI_QTY)
		WHERE 1=1
	)
--SPEC_ID 연결이 안되는 경우는 통합해서 입력
SELECT
	A.VER_ID
,	A.PLANT_ID
,	A.ITEM_ID
,	A.SPEC_ID
,	A.PSI_DATE
,	A.PSI_GUBUN
,	SUM(A.PSI_QTY)			AS	PSI_QTY
,	MAX(A.CREATE_DTTM)		AS	CREATE_DTTM
,	MAX(A.CREATE_USER)		AS	CREATE_USER
,	MAX(A.CREATE_DTTM)		AS	MODIFY_DTTM
,	MAX(A.CREATE_USER)		AS	MODIFY_USER
INTO #PSI_PK_FG_1
FROM
	CTE_PSI_ROWS A
WHERE 1=1
GROUP BY
	A.VER_ID
,	A.PLANT_ID
,	A.ITEM_ID
,	A.SPEC_ID
,	A.PSI_DATE
,	A.PSI_GUBUN


WITH
	CTE_PSI_RAW AS (
		SELECT
			A.VER_ID
		,	A.PSI_DATE
		,	A.INIT_QTY
		,	A.INPUT_QTY
		,	A.OUTPUT_QTY
		,	A.STOCK_QTY
		,	A.ITEM_ID
		,	A.PLANT_ID
		,	A.USAGE_KEY
		,	A.INVENTORY_ID
		FROM
			(
			
				SELECT
					A.VER_ID
				,	A.INVENTORY_ID
				,	A.PSI_DATE
				,	A.INIT_QTY
				,	A.INPUT_QTY
				,	A.OUTPUT_QTY
				,	A.STOCK_QTY
				,	A.ITEM_ID
				,	SUBSTRING(A.PAYLOAD, 1, CHARINDEX('&', A.PAYLOAD) - 1)	AS	PLANT_ID
				,	SUBSTRING(A.PAYLOAD, CHARINDEX('&', A.PAYLOAD) + 1, LEN(A.PAYLOAD))		AS	USAGE_KEY
				FROM
					(
						--PKG 완제품, 수주 대응
						SELECT
							A.VER_ID
						,	A.INVENTORY_ID
						,	CAST(A.START_DATE AS DATE)	AS	PSI_DATE
						,	A.INIT_QTY
						,	A.INPUT_QTY
						,	A.OUTPUT_QTY
						,	A.STOCK_QTY
						,	SUBSTRING(A.INVENTORY_ID, 1, CHARINDEX('_', A.INVENTORY_ID) - 1)	AS	ITEM_ID
						,	SUBSTRING(A.INVENTORY_ID, CHARINDEX('_', A.INVENTORY_ID) + 1, LEN(A.INVENTORY_ID))		AS	PAYLOAD
						FROM
							T3SMARTSCM.DBO.APS_MD_MP_RESULT_STOCK_STATUS A WITH (NOLOCK)
						WHERE 1=1
						AND	A.VER_ID		=	:psVER_ID
						AND	A.INVENTORY_ID	LIKE '%&%'						--수주에 대응되는 SPEC, 용도키 포함
						AND	A.ITEM_ID		LIKE '7%'
					) A
				WHERE 1=1
				
			) A
		WHERE 1=1
	)
,	CTE_PSI_SPEC AS (
		SELECT
			A.VER_ID
		,	A.PSI_DATE
		,	A.INIT_QTY
		,	A.INPUT_QTY
		,	A.OUTPUT_QTY
		,	A.STOCK_QTY
		,	A.ITEM_ID
		,	A.PLANT_ID
		,	A.USAGE_KEY
		,	ISNULL(B.INTENSITY, '')		AS	INTENSITY
		,	ISNULL(B.FLUX, '')			AS	FLUX
		,	ISNULL(B.CIE, '')			AS	CIE
		,	ISNULL(B.VF, '')			AS	VF
		,	A.INVENTORY_ID
		FROM
			CTE_PSI_RAW A
		LEFT OUTER JOIN T3SMARTSCM.DBO.TB_MT_SPEC_USAGE B WITH (NOLOCK)
			ON 1=1
			AND	B.PLANT_ID		=	A.PLANT_ID
			AND	B.ITEM_ID		=	A.ITEM_ID
			AND	B.USAGE			=	A.USAGE_KEY
			AND	B.USAGE_TYPE	=	'P'
		WHERE 1=1
	)
,	CTE_PSI_ROWS AS (
		SELECT
			A.VER_ID
		,	A.PLANT_ID
		,	A.ITEM_ID
		,	T3SMARTSCM.DBO.FN_GET_SPEC_ID_1(A.ITEM_ID, A.INTENSITY, A.FLUX, A.CIE, A.VF)	AS	SPEC_ID
		,	A.PSI_DATE
		,	B.PSI_GUBUN
		,	B.PSI_QTY
		,	GETDATE()					AS	CREATE_DTTM
		,	'SP'						AS	CREATE_USER
		,	A.INVENTORY_ID
		FROM
			CTE_PSI_SPEC A
		CROSS APPLY (VALUES
				('P', INPUT_QTY)
			,	('S', OUTPUT_QTY)
			,	('I', STOCK_QTY)
			) B(PSI_GUBUN, PSI_QTY)
		WHERE 1=1
	)
INSERT INTO T3SMARTSCM.DBO.TB_MT_MP_RESULT_PSI(
	VER_ID
,	PLANT_ID
,	ITEM_ID
,	SPEC_ID
,	PSI_DATE
,	PSI_GUBUN
,	PSI_QTY
,	CREATE_DTTM
,	CREATE_USER
,	MODIFY_DTTM
,	MODIFY_USER
)


INSERT INTO T3SMARTSCM.DBO.TB_MT_MP_RESULT_PSI(
	VER_ID
,	PLANT_ID
,	ITEM_ID
,	SPEC_ID
,	PSI_DATE
,	PSI_GUBUN
,	PSI_QTY
,	CREATE_DTTM
,	CREATE_USER
,	MODIFY_DTTM
,	MODIFY_USER
)
SELECT
	A.VER_ID
,	A.PLANT_ID
,	A.ITEM_ID
,	A.SPEC_ID
,	A.PSI_DATE
,	A.PSI_GUBUN
,	MAX(A.PSI_QTY)		AS	PSI_QTY
,	GETDATE()			AS	CREATE_DTTM
,	'SYS'				AS	CREATE_USER
,	GETDATE()			AS	MODIFY_DTTM
,	'SYS'				AS	MODIFY_USER
FROM
	(
		SELECT
			A.VER_ID
		,	A.PLANT_ID
		,	A.ITEM_ID
		,	A.SPEC_ID
		,	A.PSI_DATE
		,	A.PSI_GUBUN
		,	A.PSI_QTY
		FROM
			#PSI_PK_FG_1 A
		WHERE 1=1
		UNION ALL
		SELECT
			A.VER_ID
		,	A.PLANT_ID
		,	A.ITEM_ID
		,	A.SPEC_ID
		,	A.PSI_DATE
		,	A.PSI_GUBUN
		,	A.PSI_QTY
		FROM
			#PSI_PK_FG_2 A
		WHERE 1=1
	) A
WHERE 1=1
GROUP BY
	A.VER_ID
,	A.PLANT_ID
,	A.ITEM_ID
,	A.SPEC_ID
,	A.PSI_DATE
,	A.PSI_GUBUN


MERGE T3SMARTSCM.DBO.APS_MD_MP_INPUT_PLAN_DETAIL T
USING (
		SELECT
			A.VER_ID
		,	A.MD_TYPE
		,	A.DEMAND_ID
		,	A.SO_PLANT_ID
		,	A.ITEM_ID
		,	A.PLANT_ID
		,	A.CHILD_ITEM_ID
		,	A.PARENT_INTENSITY
		,	A.PARENT_FLUX
		,	A.PARENT_CIE
		,	A.PARENT_VF
		,	A.PARENT_PO_MIN
		,	A.PARENT_PO_MAX
		,	A.PARENT_WD_MIN
		,	A.PARENT_WD_MAX
		,	A.PARENT_VF_MIN
		,	A.PARENT_VF_MAX
		,	A.CHILD_INTENSITY
		,	A.CHILD_FLUX
		,	A.CHILD_CIE
		,	A.CHILD_VF
		,	A.CHILD_PO_MIN
		,	A.CHILD_PO_MAX
		,	A.CHILD_WD_MIN
		,	A.CHILD_WD_MAX
		,	A.CHILD_VF_MIN
		,	A.CHILD_VF_MAX
		,	A.CHILD_FILM_VALUE
		,	A.CHILD_FILM_BIN
		FROM
			T3SMARTSCM.DBO.APS_MD_MP_INPUT_PLAN_DETAIL_CONFIRM A
		WHERE 1=1
		AND	A.MD_TYPE		=	'MD'
		AND	A.CHILD_ITEM_ID	LIKE '78%'
	) S
	ON 1=1
	AND	S.VER_ID		=	T.VER_ID
	AND	S.MD_TYPE		=	T.MD_TYPE
	AND	S.DEMAND_ID		=	T.DEMAND_ID
	AND	S.SO_PLANT_ID	=	T.SO_PLANT_ID
	AND	S.ITEM_ID		=	T.ITEM_ID
	AND	S.PLANT_ID		=	T.PLANT_ID
	AND	S.CHILD_ITEM_ID	=	T.CHILD_ITEM_ID
WHEN MATCHED THEN
	UPDATE SET
		T.PARENT_INTENSITY		=	S.PARENT_INTENSITY
	,	T.PARENT_FLUX			=	S.PARENT_FLUX
	,	T.PARENT_CIE			=	S.PARENT_CIE
	,	T.PARENT_VF				=	S.PARENT_VF
	,	T.PARENT_PO_MIN			=	S.PARENT_PO_MIN
	,	T.PARENT_PO_MAX			=	S.PARENT_PO_MAX
	,	T.PARENT_WD_MIN			=	S.PARENT_WD_MIN
	,	T.PARENT_WD_MAX			=	S.PARENT_WD_MAX
	,	T.PARENT_VF_MIN			=	S.PARENT_VF_MIN
	,	T.PARENT_VF_MAX			=	S.PARENT_VF_MAX
	,	T.CHILD_INTENSITY		=	S.CHILD_INTENSITY
	,	T.CHILD_FLUX			=	S.CHILD_FLUX
	,	T.CHILD_CIE				=	S.CHILD_CIE
	,	T.CHILD_VF				=	S.CHILD_VF
	,	T.CHILD_PO_MIN			=	S.CHILD_PO_MIN
	,	T.CHILD_PO_MAX			=	S.CHILD_PO_MAX
	,	T.CHILD_WD_MIN			=	S.CHILD_WD_MIN
	,	T.CHILD_WD_MAX			=	S.CHILD_WD_MAX
	,	T.CHILD_VF_MIN			=	S.CHILD_VF_MIN
	,	T.CHILD_VF_MAX			=	S.CHILD_VF_MAX
	,	T.CHILD_FILM_VALUE		=	S.CHILD_FILM_VALUE
	,	T.CHILD_FILM_BIN		=	S.CHILD_FILM_BIN
	
UPDATE A SET
	A.ITEM_ID_7		=	T3SMARTSCM.DBO.FN_GET_ITEM_ID_7(A.ITEM_ID)
FROM
	#KIT_DEMAND_RAW A
WHERE 1=1
AND	LEN(A.ITEM_ID)	>	7
	
UPDATE A SET
	A.SPEC_MAPPING_YN		=	CASE
									WHEN B.SF_ITEM_ID_01 = '' THEN 'N'
									ELSE 'Y'
								END
,	A.SF_ITEM_ID_01			=	B.SF_ITEM_ID_01
,	A.PROD_VER				=	B.PROD_VER
FROM
	#KIT_DEMAND_RAW A
INNER JOIN (
		SELECT DISTINCT
			A.VENDOR_ID
		,	A.ITEM_ID
		,	A.INTENSITY
		,	A.FLUX
		,	A.CIE
		,	A.VF
		,	COALESCE(B.SF_ITEM_ID_01, C.SF_ITEM_ID_01, '')	AS	SF_ITEM_ID_01
		,	COALESCE(B.PROD_VER_01, C.PROD_VER_01, '')		AS	PROD_VER
		,	CASE
				WHEN B.PLANT_ID IS NOT NULL THEN 1
				WHEN C.PLANT_ID IS NOT NULL THEN 2
				ELSE 3
			END											AS	SF_ITEM_ID_01_LOC
		,	A.DP_ID
		FROM
			#KIT_DEMAND_RAW A
		LEFT OUTER JOIN T3SMARTSCM.DBO.TB_MT_SPEC_MAPPING_MASTER B WITH (NOLOCK)
			ON 1=1
			AND	B.PLANT_ID		=	A.VENDOR_ID
			AND	B.ITEM_ID		=	A.ITEM_ID
			AND	ISNULL(NULLIF(B.INTENSITY, ''), 'ALL')	=	ISNULL(NULLIF(A.INTENSITY, ''), 'ALL')
			AND	ISNULL(NULLIF(B.FLUX, ''), 'ALL')		=	ISNULL(NULLIF(A.FLUX, ''), 'ALL')
			AND	ISNULL(NULLIF(B.CIE, ''), 'ALL')		=	ISNULL(NULLIF(A.CIE, ''), 'ALL')
			AND	ISNULL(NULLIF(B.VF, ''), 'ALL')			=	ISNULL(NULLIF(A.VF, ''), 'ALL')
			AND	B.USE_YN		=	'Y'
		LEFT OUTER JOIN T3SMARTSCM.DBO.TB_MT_SPEC_MAPPING_MASTER C WITH (NOLOCK)
			ON 1=1
			AND	C.PLANT_ID		=	A.VENDOR_ID
			AND	C.ITEM_ID		=	T3SMARTSCM.DBO.FN_GET_ITEM_ID_7(A.ITEM_ID)
			AND	ISNULL(NULLIF(C.INTENSITY, ''), 'ALL')	=	ISNULL(NULLIF(A.INTENSITY, ''), 'ALL')
			AND	ISNULL(NULLIF(C.FLUX, ''), 'ALL')		=	ISNULL(NULLIF(A.FLUX, ''), 'ALL')
			AND	ISNULL(NULLIF(C.CIE, ''), 'ALL')		=	ISNULL(NULLIF(A.CIE, ''), 'ALL')
			AND	ISNULL(NULLIF(C.VF, ''), 'ALL')			=	ISNULL(NULLIF(A.VF, ''), 'ALL')
			AND	C.USE_YN		=	'Y'
		WHERE 1=1
	) B
	ON 1=1
	AND	B.DP_ID		=	A.DP_ID
WHERE 1=1
AND	B.SF_ITEM_ID_01		<>	''
	
DELETE A
FROM
	#KIT_DEMAND_RAW A
WHERE 1=1
AND	A.LEFT_QTY	=	0	

DELETE A
FROM
	T3SMARTSCM.DBO.APS_MD_MD_STOCK_PRE_PAIR_LIST A WITH (NOLOCK)
WHERE 1=1
AND	A.VER_ID	=	@VER_ID



SELECT
	A.PDP_CASE_VER_CD
,	A.SEND_SEQ
,	A.PDP_PROD_GRP_CD
,	A.DOMKR_SELL_INPT_QUNT
,	A.DOMKR_SELL_ADJS_QUNT
,	A.*
FROM
	(
		SELECT
			'C2505FPB0102'			AS	PDP_CASE_VER_CD			--PDPCASE버전코드
		,	1						AS	SEND_SEQ				--발신순번
		,	A.PDP_VER_CD			AS	PDP_VER_CD				--PDP버전코드
		,	A.SOLUTION_ID			AS	SOLN_ID					--솔루션ID
		,	A.CASE_ID				AS	PDP_CASE_ID				--PDPCASEID
		,	A.PDP_PROD_GRP_CD		AS	PDP_PROD_GRP_CD			--PDP제품그룹코드
		,	A.PDP_PROD_GRP_NM		AS	PDP_PROD_GRP_NM			--PDP제품그룹명
		,	A.BOH_INV				AS	BASC_STOCK_QUNT			--기초재고물량
		,	A.PROD_QTY				AS	PROD_QUNT				--제품물량
		,	A.PRUC_IMPT_QTY			AS	PURC_IMPRT_QUNT			--구매수입물량
		,	A.PURC_FEED_QTY			AS	PURC_FEED_QUNT			--구매피드물량
		,	A.FEED_PRCS_QTY			AS	FEED_PRCS_QUNT			--피드처리물량
		,	A.FEED_BLEN_QTY			AS	FEED_BLEND_QUNT			--피드배합물량
		,	A.SELL_DOME_INPT_QTY	AS	DOMKR_SELL_INPT_QUNT	--국내판매입력물량
		,	A.SELL_DOME_RVSN_QTY	AS	DOMKR_SELL_ADJS_QUNT	--국내판매조정물량
		,	A.SELL_EXPT_INPT_QTY	AS	EXPRT_SELL_INPT_QUNT	--수출판매입력물량
		,	A.SELL_EXPT_RVSN_QTY1	AS	EXPRT_SELL_CRFW_QUNT	--수출판매이월물량
		,	A.SELL_EXPT_RVSN_QTY2	AS	EXPRT_SELL_PREPR_QUNT	--수출판매선생산물량
		,	A.SELL_EXPT_RVSN_QTY3	AS	EXPRT_SELL_SPOT_QUNT	--수출판매SPOT물량
		,	A.SELL_BUILD_QTY		AS	SELL_BLDP_QUNT			--판매빌드업물량
		,	A.EOH_INV				AS	EOT_STOCK_QUNT			--기말재고물량
		,	A.NET_QTY				AS	NET_QUNT				--NET물량
		,	A.PROP_INV				AS	OPTL_STOCK_QUNT			--적정재고물량
		,	A.TANK_CAPA				AS	TANK_CAPA_QUNT			--탱크CAPA물량
		,	A.TANK_HEEL				AS	TANK_HEEL_QUNT			--탱크힐물량
		,	A.SYS_RGST_DTM			AS	SYS_RGST_DTM			--시스템등록일시
		,	A.SYS_RGSR_ID			AS	SYS_RGSR_ID				--시스템등록자ID
		,	A.SYS_UPD_DTM			AS	SYS_UPD_DTM				--시스템수정일시
		,	A.SYS_UPDR_ID			AS	SYS_UPDR_ID				--시스템수정자ID
		FROM
			TB_PP_STOCK_BALANCE_D A
		WHERE 1=1
		AND	A.PDP_VER_CD		=	'LPO_202505_03'
		AND	A.SOLUTION_ID		=	'498246931'
	) A
WHERE 1=1
--AND	A.PDP_PROD_GRP_CD			=	'LSR'


--PDP계획버전의 1st Term의 년월과
--Group코드를 엮어서 기본판 생성
SELECT
	B.PDP_VER_CD
,	B.PDP_CASE_PLAN_SCTN_CD
,	B.PDP_CASE_PLAN_PERD_NO
,	A.CMN_CD				AS	PDP_PROD_GRP_CD
,	A.CMN_CD_NM				AS	PDP_PROD_GRP_NM
,	C.BASC_STOCK_QUNT
FROM
	TB_CM_PDP_CMN_CD_D A
INNER JOIN VW_PP_PLAN_DT_LIST B
	ON 1=1
	AND	B.PDP_VER_CD			=	'LPO_202505_02'
	AND	B.PDP_CASE_PLAN_SCTN_CD	=	:sPDP_CASE_PLAN_SCTN_CD
	AND	B.PDP_CASE_PLAN_PERD_NO	=	:sPDP_CASE_PLAN_PERD_NO
LEFT OUTER JOIN (
		SELECT
			A.PDP_VER_CD
		,	A.PDP_PROD_GRP_CD
		,	SUM(A.BASC_STOCK_QUNT / 158.984)	AS	BASC_STOCK_QUNT
		FROM
			TB_PP_PROD_BASC_STOCK_D A
		WHERE 1=1
		AND	A.PDP_VER_CD		=	'LPO_202505_02'
		AND	A.ROMYS_PROD_CD		NOT IN (
				SELECT
					A.ROMYS_PROD_CD
				FROM
					TB_PP_ROMYS_UNRF_PROD_M A
				WHERE 1=1
			)
		GROUP BY
			A.PDP_VER_CD
		,	A.PDP_PROD_GRP_CD
	) C
	ON 1=1
	AND	C.PDP_PROD_GRP_CD	=	A.CMN_CD
WHERE 1=1
AND	A.CMN_CD_GRP_ID		=	'PDP_INPT_PROD_GRP_CD'
AND	A.USE_YN			=	'Y'


		--계획구간 전체를 비교해서
		--연결이 되지 않는 경우 참조PDP버전의 마지막 년월과 연결
		SELECT
			A.PDP_VER_CD
		,	A.YYMM
		,	A.HFMM
		,	A.PLAN_DT
		,	ISNULL(A.REF_PDP_VER_CD, :sREF_PDP_VER_CD)	AS	REF_PDP_VER_CD
		,	ISNULL(A.REF_YYMM, A.REF_YYMM_MAX)			AS	REF_YYMM
		,	ISNULL(A.REF_HFMM, A.HFMM)					AS	REF_HFMM
		,	A.PDP_CASE_PLAN_SCTN_CD
		INTO #PLAN_DT_LIST
		FROM
			(
				SELECT
					A.PDP_VER_CD
				,	A.YYMM
				,	A.HALF_NM				AS	HFMM
				,	A.PLAN_ST				AS	PLAN_DT
				,	B.PDP_VER_CD			AS	REF_PDP_VER_CD
				,	B.YYMM					AS	REF_YYMM
				,	B.HALF_NM				AS	REF_HFMM
				,	A.PDP_CASE_PLAN_SCTN_CD
				,	MAX(ISNULL(B.YYMM, '')) OVER(PARTITION BY A.PDP_VER_CD, A.PDP_CASE_PLAN_SCTN_CD)	AS	REF_YYMM_MAX
				FROM
					VW_PP_PLAN_DT_LIST A
				LEFT OUTER JOIN VW_PP_PLAN_DT_LIST B
					ON 1=1
					AND	B.PDP_VER_CD			=	:sREF_PDP_VER_CD
					AND	B.YYMM					=	A.YYMM
					AND	B.HALF_NO				=	A.HALF_NO
					AND	B.PDP_CASE_PLAN_SCTN_CD	=	A.PDP_CASE_PLAN_SCTN_CD
				WHERE 1=1
				AND	A.PDP_VER_CD			=	:sPDP_VER_CD
			) A
		WHERE 1=1



		MERGE TB_PP_INPT_CLNS_D T
		USING
			(
				SELECT
					A.PDP_VER_CD
				,	A.PDP_PROD_CD
				,	A.LP_CD
				,	A.PDP_CASE_DATA_DTL_CD
				,	A.PLAN_DT
				,	A.HFMM
				,	COALESCE(B.IDCT_YN, A.IDCT_YN)			AS	IDCT_YN
				,	B.PDP_DATA_CLNS_DVS_CD
				,	B.PDP_MIN_VAL
				,	B.PDP_MAX_VAL
				,	B.PRC_AMT
				,	COALESCE(B.SRC_LOC_VAL, A.SRC_LOC_VAL)	AS	SRC_LOC_VAL
				,	A.PDP_CASE_PLAN_SCTN_CD
				,	A.YYMM
				FROM
					(
						--LP코드 전체 목록에 대해서 계획 데이터 생성
						SELECT
							B.PDP_VER_CD
						,	A.PDP_PROD_CD
						,	A.LP_CD
						,	A.PDP_CASE_DATA_DTL_CD
						,	B.PLAN_DT
						,	B.HFMM
						,	'Y'							AS	IDCT_YN
						,	1							AS	SRC_LOC_VAL
						,	B.PDP_CASE_PLAN_SCTN_CD
						,	B.YYMM
						FROM
							TB_PP_CASE_LP_CD_R A
						CROSS JOIN #PLAN_DT_LIST B
						WHERE 1=1
						AND	A.PDP_CASE_DATA_DTL_CD		=	'BUY'
					) A
				LEFT OUTER JOIN (
						--참조버전의 데이터를 추출해서
						--현재버전으로 설정
						SELECT
							A.PDP_VER_CD
						,	B.PDP_PROD_CD
						,	B.LP_CD
						,	B.PDP_CASE_DATA_DTL_CD
						,	A.PLAN_DT
						,	A.HFMM
						,	B.IDCT_YN
						,	B.PDP_DATA_CLNS_DVS_CD
						,	B.PDP_MIN_VAL
						,	B.PDP_MAX_VAL
						,	B.PRC_AMT
						,	2							AS	SRC_LOC_VAL	--참조버전에서 복사된 경우
						FROM
							#PLAN_DT_LIST A
						INNER JOIN  TB_PP_INPT_CLNS_D B
							ON 1=1
							AND	B.PDP_VER_CD		=	A.REF_PDP_VER_CD
							AND	LEFT(B.PLAN_DT, 6)	=	A.REF_YYMM
							AND	B.HFMM				=	A.HFMM
						WHERE 1=1
					) B
					ON 1=1
					AND	B.PDP_VER_CD			=	A.PDP_VER_CD
					AND	B.PDP_CASE_DATA_DTL_CD	=	A.PDP_CASE_DATA_DTL_CD
					AND	B.PDP_PROD_CD			=	A.PDP_PROD_CD
					AND	B.PLAN_DT				=	A.PLAN_DT
				WHERE 1=1
			) S
			ON 1=1
			AND	S.PDP_VER_CD			=	T.PDP_VER_CD
			AND	S.PDP_PROD_CD			=	T.PDP_PROD_CD
			AND	S.PDP_CASE_DATA_DTL_CD	=	T.PDP_CASE_DATA_DTL_CD
			AND	S.PLAN_DT				=	T.PLAN_DT
		WHEN MATCHED THEN
			UPDATE SET
				T.LP_CD						=	S.LP_CD
			,	T.PDP_CASE_DATA_DTL_CD		=	S.PDP_CASE_DATA_DTL_CD
			,	T.IDCT_YN					=	S.IDCT_YN
			,	T.PDP_DATA_CLNS_DVS_CD		=	S.PDP_DATA_CLNS_DVS_CD
			,	T.PDP_MIN_VAL				=	S.PDP_MIN_VAL
			,	T.PDP_MAX_VAL				=	S.PDP_MAX_VAL
			,	T.PRC_AMT					=	NULL
			,	T.SRC_LOC_VAL				=	S.SRC_LOC_VAL
			,	T.PDP_CASE_PLAN_SCTN_CD		=	S.PDP_CASE_PLAN_SCTN_CD
			,	T.YYMM						=	S.YYMM
			,	T.SYS_UPD_DTM				=	GETDATE()
			,	T.SYS_UPDR_ID				=	@sUSER_CD
		WHEN NOT MATCHED THEN
			INSERT (
				PDP_VER_CD
			,	PDP_PROD_CD
			,	LP_CD
			,	PDP_CASE_DATA_DTL_CD
			,	PLAN_DT
			,	HFMM
			,	IDCT_YN
			,	PDP_MIN_VAL
			,	PDP_MAX_VAL
			,	PRC_AMT
			,	SRC_LOC_VAL
			,	PDP_CASE_PLAN_SCTN_CD
			,	YYMM
			,	SYS_RGST_DTM
			,	SYS_RGSR_ID
			,	SYS_UPD_DTM
			,	SYS_UPDR_ID
			) VALUES (
				S.PDP_VER_CD
			,	S.PDP_PROD_CD
			,	S.LP_CD
			,	S.PDP_CASE_DATA_DTL_CD
			,	S.PLAN_DT
			,	S.HFMM
			,	S.IDCT_YN
			,	S.PDP_MIN_VAL
			,	S.PDP_MAX_VAL
			,	S.PRC_AMT
			,	S.SRC_LOC_VAL
			,	S.PDP_CASE_PLAN_SCTN_CD
			,	S.YYMM
			,	GETDATE()					--SYS_RGST_DTM
			,	@sUSER_CD					--SYS_RGSR_ID
			,	GETDATE()					--SYS_UPD_DTM
			,	@sUSER_CD					--SYS_UPDR_ID
			)
		WHEN NOT MATCHED BY SOURCE
			AND	T.PDP_VER_CD			=	@sPDP_VER_CD
			AND	T.PDP_CASE_DATA_DTL_CD	=	'BUY'
		THEN DELETE
		OUTPUT $ACTION INTO @tMERGE_LOG(ROW_ACTION)
		;


		SELECT *
		FROM
			(
				--버전, 코드, 계획구간 기준으로 0이 아닌 값이 있는지 확인
				SELECT
					A.PDP_VER_CD
				,	A.PDP_PROD_CD
				,	A.PDP_CASE_DATA_DTL_CD
				,	A.PDP_CASE_PLAN_SCTN_CD
				,	SUM(IIF(A.PDP_MIN_VAL <> 0, 1, 0) + IIF(A.PDP_MAX_VAL <> 0, 1, 0))	AS	AVAIL_CNT
				FROM
					TB_PP_INPT_CLNS_D A
				WHERE 1=1
				AND	A.PDP_VER_CD			=	:sPDP_VER_CD
				AND	A.PDP_CASE_DATA_DTL_CD	=	'CROL'
				AND	A.SRC_LOC_VAL			=	2				--Avail에만 존재했던 제품
				GROUP BY
					A.PDP_VER_CD
				,	A.PDP_PROD_CD
				,	A.PDP_CASE_DATA_DTL_CD
				,	A.PDP_CASE_PLAN_SCTN_CD
			) A
		INNER JOIN TB_PP_INPT_CLNS_D B
			ON 1=1
			AND	B.PDP_VER_CD			=	A.PDP_VER_CD
			AND	B.PDP_PROD_CD			=	A.PDP_PROD_CD
			AND	B.PDP_CASE_DATA_DTL_CD	=	A.PDP_CASE_DATA_DTL_CD
			AND	B.PDP_CASE_PLAN_SCTN_CD	=	A.PDP_CASE_PLAN_SCTN_CD
		WHERE 1=1
		AND	A.AVAIL_CNT		=	0



		SELECT
			:sPDP_VER_CD		AS	PDP_VER_CD
		,	A.PDP_CAPA_CD
		,	A.PLAN_DT
		,	A.HFMM
		,	A.ARTC_TYPE_CD
		,	B.CMN_CD_NM			AS	ARTC_TYPE_NM
		,	A.PDP_MIN_VAL
		,	A.PDP_MAX_VAL
		,	A.YYMM
		FROM
			(
				--A: 현재 CAPS 기준코드 목록
				--B: 항목유형코드 확장
				--C: 계획일자 확장
				--D: 참조버전에 대한 정보를 연결, 없는 경우 NULL 유지
				SELECT
					A.PDP_CAPA_CD
				,	C.PLAN_DT
				,	C.HFMM
				,	B.ARTC_TYPE_CD
				,	CASE WHEN B.ARTC_TYPE_CD = 'STD_VAL' THEN A.STD_CAPA_MIN_VAL ELSE D.PDP_MIN_VAL	END	AS	PDP_MIN_VAL
				,	CASE WHEN B.ARTC_TYPE_CD = 'STD_VAL' THEN A.STD_CAPA_MAX_VAL ELSE D.PDP_MAX_VAL	END	AS	PDP_MAX_VAL
				,	C.YYMM
				FROM
					TB_PP_CAPA_INFO_D A
				CROSS JOIN (VALUES
						('MNT_DAYS', '정비일수')
					,	('CRTN_RATIO', '보정비율')
					,	('CRTN_VAL', '보정값')
					,	('OPER_VAL', '운영값')
					,	('STD_VAL', '기준값')
					) AS B(ARTC_TYPE_CD, ARTC_TYPE_NM)
				CROSS JOIN #PLAN_DT_LIST C
				LEFT OUTER JOIN TB_PP_CAPA_D D
					ON 1=1
					AND	D.PDP_VER_CD		=	C.REF_PDP_VER_CD	--참조버전에 대한 정보를 연결
					AND	D.PDP_CAPA_CD		=	A.PDP_CAPA_CD
					AND	LEFT(D.PLAN_DT, 6)	=	C.REF_YYMM
					AND	D.HFMM				=	C.REF_HFMM
					AND	D.ARTC_TYPE_CD		=	B.ARTC_TYPE_CD
				WHERE 1=1
				AND	A.USE_YN			=	'Y'
			) A
		INNER JOIN TB_CM_PDP_CMN_CD_D B
			ON 1=1
			AND	B.CMN_CD_GRP_ID		=	'ARTC_TYPE_CD'
			AND	B.CMN_CD			=	A.ARTC_TYPE_CD
		WHERE 1=1


SELECT
	B.PDP_VER_CD
,	B.PDP_CAPA_CD
,	B.PLAN_DT
,	B.HFMM
,	B.STD_VAL
,	B.CRTN_VAL
,	B.MNT_DAYS
,	B.CRTN_RATIO
FROM
	(
		SELECT
			A.PDP_VER_CD
		,	A.PDP_CAPA_CD
		,	A.PLAN_DT
		,	A.HFMM
		,	A.ARTC_TYPE_CD
		,	CAST(ISNULL(A.PDP_MIN_VAL, 0) AS NUMERIC(22,7))	AS	PDP_MIN_VAL
		FROM
			TB_PP_CAPA_D A
		WHERE 1=1
		AND	A.PDP_VER_CD		=	'LPO_202505_01'
		AND	A.PDP_CAPA_CD		=	'C4UL'
	) A
PIVOT (MAX(A.PDP_MIN_VAL) FOR A.ARTC_TYPE_CD IN (
		[STD_VAL]
	,	[CRTN_VAL]
	,	[MNT_DAYS]
	,	[CRTN_RATIO])) AS B
WHERE 1=1


		--운영값 계산
		SELECT
			A.PDP_VER_CD
		,	A.PDP_CAPA_CD
		,	A.YYMM
		,	A.HFMM
		,	'OPER_VAL'				AS	ARTC_TYPE_CD	--운영값
		,	((A.STD_VAL_MIN + A.CRTN_VAL_MIN) * IIF(A.CRTN_RATIO_MIN = 0, 1, A.CRTN_RATIO_MIN)) * ((B.PLAN_DAYS - A.MNT_DAYS_MIN) / B.PLAN_DAYS)	AS	PDP_MIN_VAL
		,	((A.STD_VAL_MAX + A.CRTN_VAL_MAX) * IIF(A.CRTN_RATIO_MAX = 0, 1, A.CRTN_RATIO_MAX)) * ((B.PLAN_DAYS - A.MNT_DAYS_MAX) / B.PLAN_DAYS)	AS	PDP_MAX_VAL
		FROM
			(
				SELECT
					A.PDP_VER_CD
				,	A.PDP_CAPA_CD
				,	LEFT(A.PLAN_DT, 6)			AS	YYMM
				,	A.HFMM
				,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'STD_VAL' THEN A.PDP_MIN_VAL ELSE 0 END)	AS	STD_VAL_MIN
				,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'STD_VAL' THEN A.PDP_MAX_VAL ELSE 0 END)	AS	STD_VAL_MAX
				,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'CRTN_VAL' THEN A.PDP_MIN_VAL ELSE 0 END)	AS	CRTN_VAL_MIN
				,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'CRTN_VAL' THEN A.PDP_MAX_VAL ELSE 0 END)	AS	CRTN_VAL_MAX
				,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'CRTN_RATIO' THEN A.PDP_MIN_VAL ELSE 0 END)	AS	CRTN_RATIO_MIN
				,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'CRTN_RATIO' THEN A.PDP_MAX_VAL ELSE 0 END)	AS	CRTN_RATIO_MAX
				,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'MNT_DAYS' THEN A.PDP_MIN_VAL ELSE 0 END)	AS	MNT_DAYS_MIN
				,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'MNT_DAYS' THEN A.PDP_MAX_VAL ELSE 0 END)	AS	MNT_DAYS_MAX
				FROM
					TB_PP_CAPA_D A
				WHERE 1=1
				AND	A.PDP_VER_CD		=	'LPO_202505_01'
				GROUP BY
					A.PDP_VER_CD
				,	A.PDP_CAPA_CD
				,	A.PLAN_DT
				,	A.HFMM
			) A
		INNER JOIN VW_PP_PLAN_DT_LIST B
			ON 1=1
			AND	B.PDP_VER_CD		=	A.PDP_VER_CD
			AND	B.YYMM				=	A.YYMM
			AND	B.HALF_NM			=	A.HFMM
		WHERE 1=1


		SELECT
			A.PDP_VER_CD
		,	A.PDP_CAPA_CD
		,	A.YYMM
		,	A.HFMM
		,	A.ARTC_TYPE_CD
		,	A.PDP_MIN_VAL
		,	A.PDP_MAX_VAL
		,	B.PDP_MIN_VAL
		,	B.PDP_MAX_VAL
		FROM
			(
				--운영값 계산
				SELECT
					A.PDP_VER_CD
				,	A.PDP_CAPA_CD
				,	A.YYMM
				,	A.HFMM
				,	'OPER_VAL'				AS	ARTC_TYPE_CD	--운영값
				,	((A.STD_VAL_MIN + A.CRTN_VAL_MIN) * IIF(A.CRTN_RATIO_MIN = 0, 1, A.CRTN_RATIO_MIN)) * ((B.PLAN_DAYS - A.MNT_DAYS_MAX) / B.PLAN_DAYS)	AS	PDP_MIN_VAL
				,	((A.STD_VAL_MAX + A.CRTN_VAL_MAX) * IIF(A.CRTN_RATIO_MAX = 0, 1, A.CRTN_RATIO_MAX)) * ((B.PLAN_DAYS - A.MNT_DAYS_MAX) / B.PLAN_DAYS)	AS	PDP_MAX_VAL
				FROM
					(
						SELECT
							A.PDP_VER_CD
						,	A.PDP_CAPA_CD
						,	LEFT(A.PLAN_DT, 6)			AS	YYMM
						,	A.HFMM
						,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'STD_VAL' THEN A.PDP_MIN_VAL ELSE 0 END)	AS	STD_VAL_MIN
						,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'STD_VAL' THEN A.PDP_MAX_VAL ELSE 0 END)	AS	STD_VAL_MAX
						,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'CRTN_VAL' THEN A.PDP_MIN_VAL ELSE 0 END)	AS	CRTN_VAL_MIN
						,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'CRTN_VAL' THEN A.PDP_MAX_VAL ELSE 0 END)	AS	CRTN_VAL_MAX
						,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'CRTN_RATIO' THEN A.PDP_MIN_VAL ELSE 0 END)	AS	CRTN_RATIO_MIN
						,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'CRTN_RATIO' THEN A.PDP_MAX_VAL ELSE 0 END)	AS	CRTN_RATIO_MAX
						,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'MNT_DAYS' THEN A.PDP_MIN_VAL ELSE 0 END)	AS	MNT_DAYS_MIN
						,	SUM(CASE WHEN A.ARTC_TYPE_CD = 'MNT_DAYS' THEN A.PDP_MAX_VAL ELSE 0 END)	AS	MNT_DAYS_MAX
						FROM
							TB_PP_CAPA_D A
						WHERE 1=1
						AND	A.PDP_VER_CD		=	'LPO_202505_01'
						GROUP BY
							A.PDP_VER_CD
						,	A.PDP_CAPA_CD
						,	A.PLAN_DT
						,	A.HFMM
					) A
				INNER JOIN VW_PP_PLAN_DT_LIST B
					ON 1=1
					AND	B.PDP_VER_CD		=	A.PDP_VER_CD
					AND	B.YYMM				=	A.YYMM
					AND	B.HALF_NM			=	A.HFMM
				WHERE 1=1
			) A
		INNER JOIN TB_PP_CAPA_D B
			ON 1=1
			AND	B.PDP_VER_CD			=	A.PDP_VER_CD
			AND	B.PDP_CAPA_CD			=	A.PDP_CAPA_CD
			AND	LEFT(B.PLAN_DT, 6)		=	A.YYMM
			AND	B.HFMM					=	A.HFMM
			AND	B.ARTC_TYPE_CD			=	A.ARTC_TYPE_CD
		WHERE 1=1
		AND	(
				B.PDP_MIN_VAL		<>	A.PDP_MIN_VAL
			OR	B.PDP_MAX_VAL		<>	A.PDP_MAX_VAL
			)










